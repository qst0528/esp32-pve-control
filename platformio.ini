; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; Configuration for PlatformIO itself
;   default_envs points to a specific environment.
;   e.g. `usb-debug`, `usb-prod` or `ota`
[platformio]
default_envs = wrover-devel-uart
description = Monitor and change power state of Proxmox VE VMs via Arduino

; Overview of Sections and Working environments
; * [base]
;     -> [devel]
;     -> [release]
; * [board_wrover]
; * [board_micro]
; 
; * [env:wrover-release-uart]
;    release + board_wrover + LOG_SILENT
; * [env:wrover-devel-uart]
;    devel   + board_wrover + LOG_NOTICE
; * [env:wrover-devel-armusb]
;    devel   + board_wrover + LOG_NOTICE + debugger config
;
; `base` environment
;   This is the root environment which each specific environment stems from.
;
;   `build_flags` uses Dynamic build flags.
;   See also:
;     - Dynamic build flags:
;       https://docs.platformio.org/en/latest/projectconf/section_env_build.html#dynamic-build-flags
;
;   `espressif32` platform with `arduino` framework
;     - espressif/arduino-esp32
;       License: LGPL-2.1
;       https://github.com/espressif/arduino-esp32
;   `Espressif ESP32 Dev Module
;       https://docs.platformio.org/en/latest/boards/espressif32/esp32dev.html
;
;   Libraries
;     - ArduinoLog library:
;       https://platformio.org/lib/show/1532/ArduinoLog
;       LOG_LEVEL:
;         0: silent
;         1: fatal
;         2: error
;         3: warning
;         4: notice
;         5: trace
;         6: verbose
;     - SimpleSerialShell
;       https://registry.platformio.org/libraries/philj404/SimpleSerialShell
[base]
framework         = arduino
build_flags       = !python version_macro.py
board_build.embed_txtfiles =
    src/certs/root-ca.pem
    src/certs/ssl-pub.pem
lib_deps_external =
    thijse/ArduinoLog          @ ^1.0.3  ; MIT license
    philj404/SimpleSerialShell @ ^0.2.1  ; MIT license
    bblanchon/ArduinoJson      @ ^6.19.4 ; MIT license

[devel]
extends     = base
build_flags =
    ${base.build_flags}
    -DCORE_DEBUG_LEVEL=6
monitor_port    = /dev/ttyPVEControl
monitor_speed   = 115200

[release]
extends     = base
build_flags =
    ${base.build_flags}
    -DCORE_DEBUG_LEVEL=0

[board_wrover]
platform          = espressif32 @^5.0.0
board             = esp32dev
lib_deps_builtin  = Preferences
lib_deps_external = khoih-prog/ESP32TimerInterrupt@^2.2.0
build_flags       = -DBOARD_HAS_PSRAM
		            -mfix-esp32-psram-cache-issue

[board_micro]
platform         = atmelavr
board            = micro
lib_deps_builtin = EEPROM

[upload_uart]
upload_protocol = esptool
upload_port     = /dev/ttyPVEControl
upload_speed    = 921600

[upload_armusb]
upload_protocol = olimex-arm-usb-tiny-h
upload_port     = /dev/ttyARMUSB
debug_tool      = olimex-arm-usb-tiny-h
debug_speed     = 2000

[env:wrover-release-uart]
extends     = release, board_wrover, upload_uart
build_flags =
    ${env.build_flags}
    ${release.build_flags}
    ${board_wrover.build_flags}
lib_deps    =
    ${env.lib_deps_external}
    ${board_wrover.lib_deps_builtin}
    ${board_wrover.lib_deps_external}

[env:wrover-devel-uart]
extends     = devel, board_wrover, upload_uart
build_flags =
    ${env.build_flags}
    ${devel.build_flags}
    ${board_wrover.build_flags}
lib_deps    =
    ${env.lib_deps_external}
    ${board_wrover.lib_deps_builtin}
    ${board_wrover.lib_deps_external}

[env:wrover-debug-armusb]
extends     = devel, board_wrover, upload_armusb
build_flags =
    ${env.build_flags}
    ${devel.build_flags}
    ${board_wrover.build_flags}
lib_deps    =
    ${env.lib_deps_external}
    ${board_wrover.lib_deps_builtin}
    ${board_wrover.lib_deps_external}
